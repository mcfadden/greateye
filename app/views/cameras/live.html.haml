- content_for(:body_class){"bg-black live"} if params[:kiosk]
.row{style: "margin-bottom: 2em"}
  - column_width = [(12 / SystemSetting.columns_in_live_view), 1].max
  - column_width = 12 if @cameras.size == 1
  - @cameras.each_slice(SystemSetting.columns_in_live_view) do |cameras|
    .row
      - cameras.each do |camera|
        %div{class: "col-md-#{column_width}"}
          = image_tag(preview_url(camera: camera), width: "auto", data: {camera_preview_url: preview_url(camera: camera), camera_preview_needs_refreshing: camera.preview_needs_refreshing?}, class: "center-block camera-image img-responsive") rescue nil

:coffeescript
  refreshImages = ->
    $("img[data-camera-preview-needs-refreshing='true']").each ->
      $(this).load ->
        refreshImage(this)
      .error ->
        setTimeout =>
          refreshImage(this)
        , 5000

      refreshImage(this)

  refreshImage = (img)->
    setTimeout ->
      console.log "Refreshing image"
      date = new Date()
      url = $(img).data('camera-preview-url')
      unless /\?/.test(url)
        url = url + "?a=b"
      $(img).attr('src',  "\#{url}&t=\#{date.getTime()}")
    , #{@cameras.size == 1 ? 1000 : 10000}

  scaleImages = ->
    setTimeout ->
      $("img").height($(window).height() / #{@cameras.size == 1 ? 1 : SystemSetting.columns_in_live_view})
    , 5000

  watchFocusCamera = ->
    setTimeout ->
      console.log "Checking focus camera_id"
      checkFocusChangedAt()
    , 2000

  checkFocusChangedAt = ->
    date = new Date()
    $.getJSON("/cameras/live_focus.json?key=\#{getUrlParam('key')}&t=\#{date.getTime()}", handleFocusCamera).fail ->
      setTimeout =>
        watchFocusCamera(this)
      , 15000

  handleFocusCamera = (data)->
    if window.focusCameraID?
      if window.focusCameraID != data.camera_id
        console.log "focus camera ID has changed!"
        window.location.reload()
    else
      window.focusCameraID = data.camera_id
    watchFocusCamera()

  $(window).resize(scaleImages)

  refreshImages()
  scaleImages()
  watchFocusCamera()

:javascript
  function getUrlVars() {
    var vars = {};
    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
        vars[key] = value;
    });
    return vars;
  }

  function getUrlParam(parameter, defaultvalue){
    var urlparameter = defaultvalue;
    if(window.location.href.indexOf(parameter) > -1){
        urlparameter = getUrlVars()[parameter];
        }
    return urlparameter;
  }
